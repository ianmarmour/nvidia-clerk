name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
        
    - name: Get Coverage Tools
      run:  go get github.com/mattn/goveralls

    # Per Architecture Static Builds NVIDIA-Clerk
    - name: Build Windows
      run: env GGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -a -o nvidia-clerk-windows.exe ./cmd/nvidia-clerk 

    - name: Build Windows ARM
      run: env GOARM=5 GGO_ENABLED=0 GOOS=windows GOARCH=arm go build -a -o nvidia-clerk-windows-arm.exe ./cmd/nvidia-clerk 

    - name: Build Linux
      run: env GOOS=linux GOARCH=amd64 go build -a -o nvidia-clerk-linux ./cmd/nvidia-clerk 

    - name: Build Linux ARM
      run: env GOARM=5 GOOS=linux GOARCH=arm go build -a -o nvidia-clerk-linux-arm ./cmd/nvidia-clerk

    - name: Build Linux ARM64
      run: env GOARM=5 GOOS=linux GOARCH=arm64 go build -a -o nvidia-clerk-linux-arm64 ./cmd/nvidia-clerk

    - name: Build Darwin
      run: env GOOS=darwin GOARCH=amd64 go build -a -o nvidia-clerk-darwin ./cmd/nvidia-clerk

    # Per Architecture Static Builds NVIDIA-Clerk-API-Status
    - name: Build Linux NVIDIA Clerk API Status
      run: env GOOS=linux GOARCH=amd64 go build -a -o nvidia-clerk-api-status ./cmd/nvidia-clerk-api-status

    - name: Run Tests 
      run: go test -v -cover -race -coverprofile=coverage.out ./...
  
    - name: Get Coverage Tool
      env:
        GO111MODULE: off
      run: go get github.com/mattn/goveralls
      
    - name: Upload Coverage
      run: goveralls -coverprofile=coverage.out -service=circle-ci -repotoken=${{ secrets.COVERALLS_TOKEN }}